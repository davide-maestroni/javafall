// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.12.0'
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.0'
    }
}

apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

coveralls {
    sourceDirs = files(subprojects.findAll({ it.plugins.hasPlugin('java') }).sourceSets.main.allSource.srcDirs).files.absolutePath
}

task jacocoRootReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
    dependsOn = subprojects.findAll({ it.plugins.hasPlugin('java') }).jacocoTest
    sourceDirectories = files(subprojects.findAll({ it.plugins.hasPlugin('java') }).sourceSets.main.allSource.srcDirs)
    classDirectories =  files(subprojects.findAll({ it.plugins.hasPlugin('java') }).sourceSets.main.output)
    executionData = files(subprojects.findAll({ it.plugins.hasPlugin('java') }).jacocoTestReport.executionData)
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
        xml.destination = "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}

task jacocoMerge(type: JacocoMerge) {
    subprojects.each { subproject ->
        if (subproject.plugins.hasPlugin('java'))
        executionData subproject.tasks.withType(Test)
    }
}