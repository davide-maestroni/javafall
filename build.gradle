// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.12.0'
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.0'
    }
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

gradle.projectsEvaluated {

    apply plugin: 'com.github.kt3k.coveralls'
    apply plugin: 'jacoco'

    def publishedProjects = subprojects.findAll {
        it.plugins.hasPlugin('java') && it.plugins.hasPlugin('jacoco')
    }

    coveralls {
        sourceDirs = publishedProjects.sourceSets.main.allSource.srcDirs.flatten()
        jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
    }

    task jacocoRootReport(type: JacocoReport, group: 'Coverage reports') {
        description = 'Generates an aggregate report from all subprojects'
        dependsOn(publishedProjects.test)

        additionalSourceDirs = files(publishedProjects.sourceSets.main.allJava.srcDirs)
        sourceDirectories = files(publishedProjects.sourceSets.main.allSource.srcDirs)
        classDirectories = files(publishedProjects.sourceSets.main.output)
        executionData = files(publishedProjects.jacocoTestReport.executionData)

        reports {
            html.enabled = true // human readable
            xml.enabled = true // required by coveralls
        }

        onlyIf = {
            true
        }

        doFirst {
            executionData = files(executionData.findAll { it.exists() })
        }
    }
}
