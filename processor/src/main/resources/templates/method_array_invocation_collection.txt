/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// GENERATED CODE - PLEASE DO NOT EDIT

        @Override
        @SuppressWarnings({"unchecked", "ConstantConditions", "SynchronizeOnNonFinalField"})
        protected void onCall(@javax.annotation.Nonnull final java.util.List<?> objects,
                @javax.annotation.Nonnull final com.gh.bmd.jrt.channel.ResultChannel<${resultClassName}> result) {

            synchronized(mMutex) {

                int i = 0;
                final ${componentType}[] array = new ${componentType}[objects.size()];

                for (final Object object : objects) {

                    array[i++] = (${boxedType}) object;
                }

                try {

                    result.orderByCall();

                    for (final ${resultClassName} element : ((${classFullName})${invocationTarget}).${targetMethodName}(array)) {

                        result.pass(element);
                    }

                } catch (final Throwable t) {

                    throw com.gh.bmd.jrt.invocation.InvocationException.wrapIfNeeded(t);
                }
            }
        }
