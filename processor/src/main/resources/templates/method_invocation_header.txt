/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// GENERATED CODE - PLEASE DO NOT EDIT

    private static class Invocation${methodCount}${genericTypes} extends com.github.dm.jrt.invocation.FunctionInvocation<Object, ${resultClassName}> {

        private final com.github.dm.jrt.util.Mutex mMutex;

        @SuppressWarnings("unused")
        private final com.github.dm.jrt.core.InvocationTarget<?> mTarget;

        @SuppressWarnings("ConstantConditions")
        private Invocation${methodCount}(@org.jetbrains.annotations.NotNull final com.github.dm.jrt.builder.ProxyConfiguration proxyConfiguration,
                 @org.jetbrains.annotations.NotNull final com.github.dm.jrt.core.InvocationTarget<?> target) {

            final Object mutexTarget = ${mutexTarget};

            if (mutexTarget != null) {

                mMutex = com.github.dm.jrt.core.RoutineBuilders.getSharedMutex(mutexTarget, ${sharedVars});

            } else {

                mMutex = com.github.dm.jrt.util.Mutex.NO_MUTEX;
            }

            mTarget = target;
        }
