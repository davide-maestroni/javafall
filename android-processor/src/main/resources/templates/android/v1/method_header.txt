/*
 * Copyright 2016 Davide Maestroni
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// GENERATED CODE - PLEASE DO NOT EDIT

  private final com.github.dm.jrt.core.routine.Routine<?, ${resultClassName}> mRoutine${methodCount};

  private static class ContextInvocationFactory${methodCount}${genericTypes} extends com.github.dm.jrt.android.core.invocation.ContextInvocationFactory<Object, ${resultClassName}> {

    private final java.util.Set<String> mSharedFields;

    private final com.github.dm.jrt.android.object.ContextInvocationTarget<?> mTarget;

    private ContextInvocationFactory${methodCount}(@org.jetbrains.annotations.Nullable final java.util.Set<String> sharedFields,
        @org.jetbrains.annotations.NotNull final com.github.dm.jrt.android.object.ContextInvocationTarget<?> target) {
      super(new Object[]{sharedFields, target});
      mSharedFields = sharedFields;
      mTarget = target;
    }

    @org.jetbrains.annotations.NotNull
    @Override
    public com.github.dm.jrt.android.core.invocation.ContextInvocation<Object, ${resultClassName}> newInvocation() {
      return new ContextInvocation${methodCount}${genericTypes}(mSharedFields, mTarget);
    }
  }

  @org.jetbrains.annotations.NotNull
  private com.github.dm.jrt.core.routine.Routine<?, ${resultClassName}> initRoutine${methodCount}(
      @org.jetbrains.annotations.NotNull final com.github.dm.jrt.android.object.ContextInvocationTarget<?> target,
      @org.jetbrains.annotations.NotNull final com.github.dm.jrt.core.config.InvocationConfiguration invocationConfiguration,
      @org.jetbrains.annotations.NotNull final com.github.dm.jrt.object.config.ObjectConfiguration objectConfiguration,
      @org.jetbrains.annotations.NotNull final com.github.dm.jrt.android.core.config.LoaderConfiguration loaderConfiguration) {
    return getBuilder(mContext, new ContextInvocationFactory${methodCount}${genericTypes}(${sharedFields}, target))
        .applyInvocationConfiguration()
        .with(invocationConfiguration)
        ${routineBuilderOptions}
        .configured()
        .applyLoaderConfiguration()
        .with(loaderConfiguration)
        ${loaderBuilderOptions}
        .configured()
        .buildRoutine();
  }
