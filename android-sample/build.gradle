/*
 * Copyright 2016 Davide Maestroni
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply from: '../extra.gradle'

ext {
  androidChannelVersion = '7.0.0'
  androidCoreVersion = '7.0.0'
  androidReflectVersion = '7.0.0'
  androidRetrofitVersion = '7.0.0'
  androidStreamVersion = '7.0.0'
  channelVersion = '7.0.0'
  coreVersion = '7.0.0'
  functionVersion = '7.0.0'
  reflectVersion = '7.0.0'
  retrofitVersion = '7.0.0'
  streamVersion = '7.0.0'
}

android {
  compileSdkVersion 23
  buildToolsVersion '23.0.3'

  defaultConfig {
    applicationId 'com.github.dm.jrt.android.sample'
    minSdkVersion 8
    targetSdkVersion 23
    versionCode 1
    versionName '1.0'

    testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }

  lintOptions {
    disable 'InvalidPackage'
  }
}

dependencies {
  androidTestCompile 'com.android.support:support-annotations:23.2.1'
  androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
  androidTestCompile 'com.android.support.test:rules:0.5'
  androidTestCompile 'com.android.support.test:runner:0.5'
  compile 'com.android.support:appcompat-v7:23.2.1'
  compile 'com.squareup.retrofit2:converter-gson:2.1.0'
  compile 'com.squareup.retrofit2:retrofit:2.1.0'
  testCompile 'junit:junit:4.12'
}

conditionalDependencies {
  compile name: 'android-retrofit', version: androidRetrofitVersion
  compile name: 'core', version: coreVersion
}

tasks.withType(Javadoc) {
  def prefix = 'http://davide-maestroni.github.io/jroutine/javadoc'
  options.overview("${project.projectDir}/docs/overview.html")
  options.links('https://square.github.io/retrofit/2.x/retrofit/',
      "${prefix}/${androidChannelVersion}/android-channel/",
      "${prefix}/${androidCoreVersion}/android-core/",
      "${prefix}/${androidReflectVersion}/android-reflect/",
      "${prefix}/${androidRetrofitVersion}/android-retrofit/",
      "${prefix}/${androidStreamVersion}/android-stream/",
      "${prefix}/${channelVersion}/channel/",
      "${prefix}/${coreVersion}/core/",
      "${prefix}/${functionVersion}/function/",
      "${prefix}/${reflectVersion}/reflect/",
      "${prefix}/${retrofitVersion}/retrofit/",
      "${prefix}/${streamVersion}/stream/")
}

project.gradle.taskGraph.whenReady {
  connectedDebugAndroidTest {
    // Sample tests are quite unstable on Travis CI...
    ignoreFailures = true
  }
}
