/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.android.library'
apply plugin: 'jacoco'
apply plugin: 'findbugs'
apply plugin: 'com.github.kt3k.coveralls'
apply from: '../extra.gradle'

group = project.getProperty('groupName')
version = project.getProperty('releaseVersion')
archivesBaseName = "${project.parent.name}-${project.name}"

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    defaultConfig {
        minSdkVersion 4
        targetSdkVersion 22
        versionCode Integer.parseInt(project.getProperty('releaseVersionCode'))
        versionName version
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        debug {
            minifyEnabled false
            testCoverageEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_5
        targetCompatibility JavaVersion.VERSION_1_5
    }
}

dependencies {
    androidTestCompile 'org.assertj:assertj-core:1.7.1'
    compile 'com.android.support:support-v4:22.2.1'
}
conditionalDependencies {
    compile name: 'library', artifact: { it.parent.name }
}

findbugs {
    toolVersion '3.0.1'
}

tasks.withType(FindBugs) {
    excludeFilter = file('findbugs.xml')
}

tasks.withType(Javadoc) {
    options.overview("${project.projectDir}/docs/overview.html")
    options.links('http://docs.oracle.com/javase/7/docs/api/',
            'http://davide-maestroni.github.io/jroutine/javadoc/library/')
}
